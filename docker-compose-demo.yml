
services:
  # ---------- DB / Redis ----------
  fdg-database:
    container_name: fdg-database
    build:
      context: ./database
      dockerfile: Dockerfile
    image: simpaylog/fdg-database
    volumes:
      - ./database/conf:/etc/postgresql/postgresql.conf
    environment:
      - POSTGRES_USER=demo
      - POSTGRES_PASSWORD=demo
      - POSTGRES_DB=finance-data
    ports:
      - "5432:5432"
    networks: [app-net]

  redis:
    container_name: fdg-redis
    image: redis:7.2-alpine
    command: redis-server --port 6379
    labels: ["name=redis","mode=standalone"]
    ports: ["6379:6379"]
    networks: [app-net]

  # ---------- ELK ----------
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xmx512m -Xms512m
    ports:
      - "9200:9200"
    networks: [app-net]

  logstash:
    image: docker.elastic.co/logstash/logstash:8.13.4
    container_name: logstash
    ports: ["9600:9600"]
    volumes:
      - ${PWD}/infra/elk/logstash/pipeline:/usr/share/logstash/pipeline
      - ${PWD}/infra/elk/logstash/config:/usr/share/logstash/config
      - ${PWD}/infra/elk/logstash/scripts:/usr/share/logstash/scripts
      # 여러 파이프라인이면 아래 주석 해제
      # - ${PWD}/infra/elk/logstash/config/pipelines.yml:/usr/share/logstash/config/pipelines.yml:ro
    environment:
      - LS_JAVA_OPTS=-Xmx512m -Xms512m
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
    - elasticsearch
    networks: [app-net]

  kibana:
    image: docker.elastic.co/kibana/kibana:8.13.4
    container_name: kibana
    ports: ["5601:5601"]
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    networks: [app-net]

  # ---------- Kafka (ZK → brokers → UI) ----------
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    container_name: zookeeper
    ports: ["2181:2181"]
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks: [app-net]

  kafka-1:
    image: confluentinc/cp-kafka:7.3.2
    container_name: kafka-1
    ports: ["9092:9092"]
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-1:29092,EXTERNAL://localhost:9092
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:29092,EXTERNAL://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks: [app-net]

  kafka-2:
    image: confluentinc/cp-kafka:7.3.2
    container_name: kafka-2
    ports: ["9093:9093"]
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-2:29093,EXTERNAL://localhost:9093
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:29093,EXTERNAL://0.0.0.0:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks: [app-net]

  kafka-3:
    image: confluentinc/cp-kafka:7.3.2
    container_name: kafka-3
    ports: ["9094:9094"]
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-3:29094,EXTERNAL://localhost:9094
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:29094,EXTERNAL://0.0.0.0:9094
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks: [app-net]

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports: ["18989:8080"]
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka-1:29092,kafka-2:29093,kafka-3:29094
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
    networks: [app-net]

  # ---------- Apps ----------
  fdg-api:
    build:
      context: ./generator-api
    image: simpaylog/fdg-api:local
    environment:
      - SPRING_PROFILES_ACTIVE=demo
      - SPRING_DATASOURCE_USERNAME=demo
      - SPRING_DATASOURCE_PASSWORD=demo
      - SPRING_DATASOURCE_URL=jdbc:postgresql://fdg-database:5432/finance-data
      - REDIS_HOST=redis
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka-1:29092,kafka-2:29093,kafka-3:29094
    depends_on:
      - fdg-database
      - kafka-1
      - kafka-2
      - kafka-3
      - elasticsearch
    networks: [app-net]
    ports:
      - "8080:8080"

  fdg-simulator:
    build:
      context: ./generator-simulator
    image: simpaylog/fdg-simulator:local
    environment:
      - SPRING_PROFILES_ACTIVE=demo
      - SPRING_DATASOURCE_USERNAME=demo
      - SPRING_DATASOURCE_PASSWORD=demo
      - REDIS_HOST=redis
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka-1:29092,kafka-2:29093,kafka-3:29094
    depends_on:
      - fdg-api
    networks: [app-net]
    ports:
      - "8081:8081"

networks:
  app-net: {}
