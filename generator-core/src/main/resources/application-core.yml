spring:
  profiles:
    active: local
---
spring:
  config:
    activate:
      on-profile: local

  datasource:
    hikari:
      maximum-pool-size: 30
      max-lifetime: 30000
      connection-timeout: 3000 # 커넥션을 얻기 위한 최대 대기 시간
      validation-timeout: 3000 # 커넥션 유효성 검사를 위한 제한 시간
      minimum-idle: 5 # 최소 유휴 커넥션 수
    url: jdbc:postgresql://localhost:5432/finance-data
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
    driver-class-name: org.postgresql.Driver

  jpa:
    database: postgresql
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        jdbc:
          batch_size: 100
        order_inserts: true
        format_sql: true
    show-sql: false
    open-in-view: false

  data:
    redis:
      host: localhost
      port: 6379

logging:
  level:
    root: info
---
spring:
  config:
    activate:
      on-profile: test

  datasource:
    url: jdbc:h2:mem:testdb;MODE=PostgreSQL;
    driver-class-name: org.h2.Driver
    username: sa
    password:

  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    open-in-view: false

  data:
    redis:
      host: localhost
      port: 6379

  sql:
    init:
      mode: always